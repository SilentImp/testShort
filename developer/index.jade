extends ./partials/layout.jade

block title
  title Testing Shorts #1

block slides
  
  article.illustration.illustration--jest

  article.center.qrcode.var-2
    .wrapper
      .half
        h2 Jest
      .half
        img(src="images/jest_link.svg", alt="QRCODE")
      p
        a(href="https://facebook.github.io/jest/", data-click=true) https://facebook.github.io/jest/

  article.center.code-9
    .wrapper
      pre
        code.bash.
          npm i -D jest

  article.center.code-4
    .wrapper
      pre
        code.javascript.
          // jest.config.js
          module.exports = {
            "collectCoverage": true,
            "collectCoverageFrom": [
              "!**/__mocks__/**",
              "!**/__tests__/**",
              "source/*.js"
            ],
            "coverageDirectory": "./coverage/",
            "coverageReporters": [
              "clover",
              "json",
              "text",
              "html"
            ]
          }
          
  article.center.code-9
    .wrapper
      pre
        code.bash.
          ./__tests__
            ./index.js
          ./index.js

  article.center.code-8
    .wrapper
      pre
        code.javascript.
          describe('Group', () => {
            // …
          });
          
  article.center.code-6
    .wrapper
      pre
        code.javascript.
          describe('Group', () => {
            describe('Sub Group', () => {
              // …
            });
          });

  article.center.code-6
    .wrapper
      pre
        code.javascript.
          describe('Group', () => {
            it('Test Description', () => {
              // …
            });
          });
  
  article.center.code-6
    .wrapper
      pre
        code.javascript.
          describe('Group', () => {
            it('Test Description', () => {
              expect(0).toBe(0);
            });
          });

  article.center.code-1
    .wrapper
      pre
        code.javascript.
          // package.json
          {
          //…
          "scripts": {
              //…
              "test": "jest"
            },
          }
          
  article.center.code-9
    .wrapper
      pre
        code.bash.
          npm t

  article.screen.screen--coverage-1
    
  article.screen.screen--coverage-2

  article.center.qrcode.var-2
    .wrapper
      .half
        h2 Expect
      .half
        img(src="images/expect_link.svg", alt="QRCODE")
      p
        a(href="https://facebook.github.io/jest/docs/en/expect.html", data-click=true) http://bit.ly/2vMzG09

  article.center.code-9
    .wrapper
      pre
        code.bash.
          npm i -D nock

  article.center.qrcode.var-2
    .wrapper
      .half
        h2 Nock
      .half
        img(src="images/nock_link.svg", alt="QRCODE")
      p
        a(href="https://github.com/node-nock/nock", data-click=true) https://github.com/node-nock/nock

  article.center.code-1
    .wrapper
      pre
        code.javascript.
          import 'isomorphic-fetch';
          import nock from 'nock';
          import VendorService from '../index.js';

          const serviceUrl = 'https://api.tm.com/v1/';
          const token = 'iddqdidclip';

  article.center.code-3
    .wrapper
      pre
        code.javascript.
          it('Add social', async () => {
            const answerExpected = { 
              id: 103,
              author_id: 966,
              name: 'twitter',
              link: 'https://twitter.com/@silentimp' 
            };
            const vendor = new VendorService(serviceUrl, token);
            const social = await vendor.linkSocial(
              'twitter', 
              'https://twitter.com/@silentimp');
            expect(social).toEqual(answerExpected);
          });

  article.center.code-2
    .wrapper
      pre
        code.javascript.
          nock(/[.]+/)
            .post('/authors/v1/authors/profile/social-account')
            .reply(201, answerExpected);

  article.center.code-5
    .wrapper
      pre
        code.javascript.
          it('Add social', async () => {
            const answerExpected = { 
              id: 103,
              author_id: 966,
              name: 'twitter',
              link: 'https://twitter.com/@silentimp' 
            };
            
            nock(/[.]+/)
              .post('/authors/v1/authors/profile/social-account')
              .reply(201, answerExpected);
              
              const vendor = new VendorService(serviceUrl, token);
              const social = await vendor.linkSocial(
                'twitter', 
                'https://twitter.com/@silentimp');
              expect(social).toEqual(answerExpected);
          });
  
  article.contacts.center.qrcode
    .wrapper
      .about-speaker.half
        p.name Антон Немцев
        p.link http://silentimp.info/
        p.twitter @silentimp
        p.email thesilentimp@gmail.com
        p.skype skype: ravencry
      .half
        img(src="images/repo_link.svg", alt="QRCODE cо ссылкой на доклад")
  
      p
        a(href="https://github.com/SilentImp/testShort", data-click=true) http://bit.ly/2eogzn4
